/队列的创建
function Queue(){
  var items=[];
  this.enqueue=function(e){
    items.push(e);
  }
  this.dequeue=function(){
    return items.shift();
  }
  this.front=function(){
    return items[0];
  }
  this.isEmpty=function(){
    return items.length==0;
  }
  this.size=function(){
    return items.length;
  }
  this.clear=function(){
    items=[];//以为可以多次调用shift方法，把数组中的元素全移除同样实现clear功能
  }
   this.print=function(){
    consloe.log(items.toString());
  }
}

var queue=new Queue();


//队列的应用：优先队列
function Pirority(){
  var items=[];
  function QueueElement(element,priority){
    this.element=element;
    this.priority=priority;
  }
  this.enqueue=function(element,priority){
    var queueElement=new QueueElement(element,priority);
    if(this.isEmpty()){
      items.push(queueElement);
    }else{
      var added=false;
      for(var i=0;i<items.length;i++){
        if(queueElement.priority<items[i].priority){
          items.splice(i,0,queueElement);
          added=true;
          break;
        }
      }
      if(!added){
        items.push(queueElement);
      }
    }
  }
  //其它相关方法
}




//循环队列的应用：击鼓传花
function hotPotato(nameList,num){
  var queue=new Queue();
  for(var i=0;i<nameList.length;i++){
    queue.enqueue(nameList[i]);
  }
  var eliminated="";
  while(queue.size()>1){
    for(var i=0;i<num;i++){
      queue.enqueue(queue.dequeue());
    }
    eliminated=queue.dequeue();
    console.log(eliminated+"在游戏中被淘汰。")
  }
  return queue.dequeue();
}
